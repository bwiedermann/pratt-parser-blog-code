{"contents":"exports.__esModule = true;\nvar array_js_1 = __fusereq(141);\nvar array_js_1d = __fuse.dt(array_js_1);\nvar enclose_js_1 = __fusereq(55);\nvar enclose_js_1d = __fuse.dt(enclose_js_1);\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2, dy = b.y - a.y, y, b2, d2 = dx * dx + dy * dy;\n  if (d2) {\n    (a2 = a.r + c.r, a2 *= a2);\n    (b2 = b.r + c.r, b2 *= b2);\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\nfunction score(node) {\n  var a = node._, b = node.next._, ab = a.r + b.r, dx = (a.x * b.r + b.x * a.r) / ab, dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\nfunction packEnclose(circles) {\n  if (!(n = (circles = array_js_1d.default(circles)).length)) return 0;\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n  (a = circles[0], a.x = 0, a.y = 0);\n  if (!(n > 1)) return a.r;\n  (b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0);\n  if (!(n > 2)) return a.r + b.r;\n  place(b, a, c = circles[2]);\n  (a = new Node(a), b = new Node(b), c = new Node(c));\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n  pack: for (i = 3; i < n; ++i) {\n    (place(a._, b._, c = circles[i]), c = new Node(c));\n    (j = b.next, k = a.previous, sj = b._.r, sk = a._.r);\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          (b = j, a.next = b, b.previous = a, --i);\n          continue pack;\n        }\n        (sj += j._.r, j = j.next);\n      } else {\n        if (intersects(k._, c._)) {\n          (a = k, a.next = b, b.previous = a, --i);\n          continue pack;\n        }\n        (sk += k._.r, k = k.previous);\n      }\n    } while (j !== k.next);\n    (c.previous = a, c.next = b, a.next = b.previous = b = c);\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        (a = c, aa = ca);\n      }\n    }\n    b = a.next;\n  }\n  (a = [b._], c = b);\n  while ((c = c.next) !== b) a.push(c._);\n  c = enclose_js_1d.default(a);\n  for (i = 0; i < n; ++i) (a = circles[i], a.x -= c.x, a.y -= c.y);\n  return c.r;\n}\nexports.packEnclose = packEnclose;\nfunction __DefaultExport__(circles) {\n  packEnclose(circles);\n  return circles;\n}\nexports.default = __DefaultExport__;\n"}