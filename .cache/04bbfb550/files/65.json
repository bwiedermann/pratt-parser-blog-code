{"contents":"exports.__esModule = true;\nvar dice_js_1 = __fusereq(61);\nvar dice_js_1d = __fuse.dt(dice_js_1);\nvar slice_js_1 = __fusereq(62);\nvar slice_js_1d = __fuse.dt(slice_js_1);\nvar squarify_js_1 = __fusereq(64);\nexports.default = (function custom(ratio) {\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && rows.ratio === ratio) {\n      var rows, row, nodes, i, j = -1, n, m = rows.length, value = parent.value;\n      while (++j < m) {\n        (row = rows[j], nodes = row.children);\n        for ((i = row.value = 0, n = nodes.length); i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) dice_js_1d.default(row, x0, y0, x1, value ? y0 += (y1 - y0) * row.value / value : y1); else slice_js_1d.default(row, x0, y0, value ? x0 += (x1 - x0) * row.value / value : x1, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarify_js_1.squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n  resquarify.ratio = function (x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n  return resquarify;\n})(squarify_js_1.phi);\n"}