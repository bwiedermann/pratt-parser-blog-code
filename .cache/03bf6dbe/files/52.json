{"contents":"exports.__esModule = true;\nvar siblings_js_1 = __fusereq(53);\nvar accessors_js_1 = __fusereq(125);\nvar constant_js_1 = __fusereq(126);\nvar constant_js_1d = __fuse.dt(constant_js_1);\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\nfunction __DefaultExport__() {\n  var radius = null, dx = 1, dy = 1, padding = constant_js_1.constantZero;\n  function pack(root) {\n    (root.x = dx / 2, root.y = dy / 2);\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius)).eachAfter(packChildren(padding, 0.5)).eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius)).eachAfter(packChildren(constant_js_1.constantZero, 1)).eachAfter(packChildren(padding, root.r / Math.min(dx, dy))).eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n  pack.radius = function (x) {\n    return arguments.length ? (radius = accessors_js_1.optional(x), pack) : radius;\n  };\n  pack.size = function (x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n  pack.padding = function (x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant_js_1d.default(+x), pack) : padding;\n  };\n  return pack;\n}\nexports.default = __DefaultExport__;\nfunction radiusLeaf(radius) {\n  return function (node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\nfunction packChildren(padding, k) {\n  return function (node) {\n    if (children = node.children) {\n      var children, i, n = children.length, r = padding(node) * k || 0, e;\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = siblings_js_1.packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\nfunction translateChild(k) {\n  return function (node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n"}